% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/smurf.R
\name{smurf}
\alias{smurf}
\title{SMuRF v3.0.0}
\usage{
smurf(
  directory = NULL,
  mode = NULL,
  nthreads = -1,
  annotation = F,
  output.dir = NULL,
  parse.dir = NULL,
  snv.cutoff = "default",
  indel.cutoff = "default",
  build = NULL,
  change.build = F,
  find.build = F,
  t.label = NULL,
  re.tabIndex = F,
  check.packages = T,
  file.exclude = NULL
)
}
\arguments{
\item{directory}{Choose directory where the Variant Caller Format(VCF) files are located.
Alternatively, provide a list object containing the path to the 5 VCF files labeled: mutect, freebayes, vardict, varscan and strelka.}

\item{mode}{Choose "snv", "indel" or "combined" (snv+indel).
The appropriate parsing and prediction model will be performed
to obtain a list of somatic mutation calls.

Debug mode: Choose "featureselectionall" to parse the VCF files only.}

\item{nthreads}{Default as "-1", where all available cores will be used for RandomForest prediction.
Specify any integer from 1 to x, depending on your resources available.
For 32-bit Windows, only 1 core is allowed (nthreads=1).}

\item{annotation}{TRUE or FALSE (default). Provide gene annotations for each variant call.}

\item{output.dir}{Path to output directory (if saving files as .txt)}

\item{parse.dir}{Specify if changing SMuRF default cutoffs in the future.
Path to the location of existing snv-parse.txt and indel-parse.txt files generated by SMuRF.}

\item{snv.cutoff}{Default SNV model cutoff, 0.351791676448298 in SMuRF v3.0.0,  unless a number between 0 to 1 is stated.}

\item{indel.cutoff}{Default indel model cutoff, 0.206274634032831 in SMuRF v3.0.0, unless a number between 0 to 1 is stated.}

\item{build}{Genome build='hg19' or "hg38". Please specify.}

\item{change.build}{TRUE or FALSE. For conversion of your genomic coordinates.
Default option is disabled to retain your original 'build' specified above.}

\item{find.build}{Default as FALSE. Additional genome build check for the annotation step.
Retrieves the reference genome from the Strelka2 vcf header info to cross check with the build stated by the user.}

\item{t.label}{(optional) Provide the sample name for your tumour sample to ease
the identification of the normal and tumour sample names in your vcf.
See examples below}

\item{re.tabIndex}{Default as FALSE. Set to TRUE if tab-indexed (.tbi) files for each vcf is missing.}

\item{check.packages}{Default as TRUE. For debug mode.}

\item{file.exclude}{Additional keywords in file directory names to be filtered.}
}
\description{
Somatic mutation consensus calling based on five callers:
MuTect2, Freebayes, VarDict, VarScan and Strelka2
using a RandomForest model to consolidate a list of high accuracy calls.
}
\note{
Input files containing variant calls should be ".vcf.gz" format of each caller.
Supported for R >= 3.5.0, Java version 7 (up to 11) is supported.
}
\examples{
myresults = smurf(directory="/path/to/directory..",
                  mode="indel",build='hg19')

myresults = smurf(directory="/path/to/directory..",
                  mode="snv",build='hg19',
                  output.dir="/path/to/output")

myresults = smurf(directory="/path/to/directory..",
                  mode="combined",build='hg19',
                  nthreads = 4,
                  snv.cutoff = 0.2, indel.cutoff = 'default')

myresults = smurf(directory="/path/to/directory..",
                  mode="combined", 
                  annotation=T, build='hg19')

#Change hg38 to hg19 coordinates in gene annotation output
myresults = smurf(directory="/path/to/directory..",
                  mode="combined", 
                  annotation=T, 
                  build='hg38', change.build=T)
                  
#Specify tumor sample name
myresults = smurf(directory="/path/to/directory..",
                  mode="combined", 
                  annotation=T, 
                  build='hg38', t.label = '-T')
                                      
#Specify directories manually
dir.list = list(mutect='/path/to/mutect.vcf.gz',
                freebayes='/path/to/freebayes.vcf.gz',
                vardict='/path/to/vardict.vcf.gz',
                varscan='/path/to/varscan.vcf.gz',
                strelka='/path/to/strelka.vcf.gz')
                
myresults = smurf(directory=dir.list, 
                  model="combined",build='hg19')
                                   
}
